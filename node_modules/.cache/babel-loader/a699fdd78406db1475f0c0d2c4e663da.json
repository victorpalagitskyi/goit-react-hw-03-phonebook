{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { ContactForm } from './ContactsForm/ContactsForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactsList } from './ContactsList/ContactsList';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.checkName = name => {\n      return this.state.contacts.find(contacts => contacts.name === name);\n    };\n\n    this.addContact = _ref => {\n      let {\n        name,\n        number\n      } = _ref;\n      const contact = {\n        id: nanoid(),\n        name,\n        number\n      };\n\n      if (this.checkName(name)) {\n        return alert(`${name} is already in contacts`);\n      } else this.setState(_ref2 => {\n        let {\n          contacts\n        } = _ref2;\n        return {\n          contacts: [contact, ...contacts]\n        };\n      });\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.filtredContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const lowerFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(lowerFilter));\n    };\n\n    this.deleteContact = id => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (parsedContacts) {\n      this.setState({\n        contact: parsedContacts\n      });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), this.state.contacts.lenght !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          value: this.state.filter,\n          onChange: this.changeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n          contacts: this.filtredContacts(),\n          onDeleteContact: this.deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your contacts !!!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["React","Component","ContactForm","Filter","ContactsList","nanoid","App","state","contacts","id","name","number","filter","checkName","find","addContact","contact","alert","setState","changeFilter","e","currentTarget","value","filtredContacts","lowerFilter","toLowerCase","includes","deleteContact","prevState","componentDidMount","parsedContacts","JSON","parse","localStorage","getItem","componentDidUpdate","_","setItem","stringify","render","height","display","justifyContent","alignItems","fontSize","color","lenght"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { ContactForm } from './ContactsForm/ContactsForm'\r\nimport { Filter } from './Filter/Filter'\r\nimport { ContactsList } from './ContactsList/ContactsList'\r\nimport { nanoid } from 'nanoid'\r\n\r\n\r\n\r\nexport class App extends  Component {\r\n\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: ''\r\n  }\r\n\r\n   componentDidMount() {\r\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contact: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  checkName = name => {\r\n    return this.state.contacts.find(contacts => contacts.name === name)\r\n  };\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: nanoid(),\r\n      name,\r\n      number\r\n    };\r\n  \r\n    if (this.checkName(name)) {\r\n      return alert(`${name} is already in contacts`)\r\n    } else\r\n      this.setState(({ contacts }) => (\r\n        {\r\n          contacts: [contact, ...contacts],\r\n        })\r\n      )\r\n  }\r\n\r\n  changeFilter = e => { \r\n    this.setState({filter: e.currentTarget.value})\r\n  } \r\n  filtredContacts = () => { \r\n    const { filter, contacts } = this.state;\r\n    const lowerFilter = filter.toLowerCase()\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(lowerFilter)\r\n    );\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\r\n    }))\r\n  }\r\n  \r\n   \r\n  \r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: '100vh',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          fontSize: 40,\r\n          color: '#010101'\r\n        }}\r\n      >\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        {this.state.contacts.lenght !== 0 ? (\r\n          <div >\r\n            <h2>Contacts</h2>\r\n            <Filter\r\n              value={this.state.filter}\r\n              onChange={this.changeFilter} />\r\n            <ContactsList\r\n              contacts={this.filtredContacts()} \r\n              onDeleteContact={this.deleteContact}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <p>Your contacts !!!!!</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}